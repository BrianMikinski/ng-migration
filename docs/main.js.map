{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.states.ts","webpack:///./src/app/core/app-root/app-root.component.html","webpack:///./src/app/core/app-root/app-root.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/highlight-name/highlight-name.pipe.ts","webpack:///./src/app/core/logger/logger.interceptor.ts","webpack:///./src/app/home/home-page/home-page.component.html","webpack:///./src/app/home/home-page/home-page.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/session/session-display/session-display.component.html","webpack:///./src/app/session/session-display/session-display.component.scss","webpack:///./src/app/session/session-display/session-display.component.ts","webpack:///./src/app/session/session-service/session.service.ts","webpack:///./src/app/session/session.module.ts","webpack:///./src/app/session/sessions-page/sessions-page.component.html","webpack:///./src/app/session/sessions-page/sessions-page.component.ts","webpack:///./src/app/session/show-session-details/show-session-details.directive.ts","webpack:///./src/app/speaker/speaker-display/speaker-display.component.html","webpack:///./src/app/speaker/speaker-display/speaker-display.component.scss","webpack:///./src/app/speaker/speaker-display/speaker-display.component.ts","webpack:///./src/app/speaker/speaker-service/speaker.service.ts","webpack:///./src/app/speaker/speaker.module.ts","webpack:///./src/app/speaker/speakers-page/speakers-page.component.html","webpack:///./src/app/speaker/speakers-page/speakers-page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule } from '@angular/core';\nimport {UIRouterModule} from \"@uirouter/angular\";\n\nimport {CoreModule} from './core/core.module';\nimport {HomeModule} from './home/home.module';\nimport {SessionModule} from './session/session.module';\nimport {SpeakerModule} from './speaker/speaker.module';\n\nimport {environment} from '../environments/environment';\nimport {states} from './app.states';\nimport {AppRootComponent} from './core/app-root/app-root.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    UIRouterModule.forRoot({ states}),\n    CoreModule,\n    HomeModule,\n    SessionModule,\n    SpeakerModule\n  ],\n  providers: [],\n  bootstrap: [AppRootComponent]\n})\nexport class AppModule {}\n","import {SessionsPageComponent} from './session/sessions-page/sessions-page.component';\nimport {HomePageComponent} from './home/home-page/home-page.component';\nimport {SpeakersPageComponent} from './speaker/speakers-page/speakers-page.component';\n\nconst homeState = {\n    name: 'home',\n    url: '/',\n    views: {\n        'content': {\n            component: HomePageComponent\n        }\n    }\n\n};\n\nconst sessionState = {\n    name: 'session',\n    url: '/sessions',\n    views: {\n        'content': {\n            component: SessionsPageComponent\n        }\n    }\n};\n\nconst speakerState = {\n    name: 'speaker',\n    url: '/speakers',\n    views: {\n        'content': {\n            component: SpeakersPageComponent\n        }\n    }\n};\n\nexport const states = [homeState, sessionState, speakerState];\n","module.exports = \" <div ui-view=\\\"content\\\"></div>\"","import {Component, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector:    'md-app-root',\n  templateUrl: './app-root.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppRootComponent {\n\n    constructor() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport {UIRouterModule} from \"@uirouter/angular\";\n\nimport {HighlightNamePipe} from './highlight-name/highlight-name.pipe';\nimport {LoggerInterceptor} from './logger/logger.interceptor';\nimport {AppRootComponent} from './app-root/app-root.component';\n\n\n@NgModule({\n  imports: [\n      CommonModule,\n      UIRouterModule\n  ],\n  declarations: [\n      AppRootComponent,\n      HighlightNamePipe\n  ],\n  exports: [\n      HighlightNamePipe\n  ],\n  entryComponents: [\n      AppRootComponent\n  ],\n  providers: [\n      { provide: HTTP_INTERCEPTORS, useClass: LoggerInterceptor, multi: true }\n  ]\n})\nexport class CoreModule { }\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'mdHighlightName'})\nexport class HighlightNamePipe implements PipeTransform {\n    transform(name: string, targetName: string): string {\n        if (name === targetName) {\n            return '<mark>' + name + '</mark>';\n        }\n\n        return name;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpResponse,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\n\nimport {tap} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class LoggerInterceptor implements HttpInterceptor {\n\n    constructor() {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request)\n            .pipe(tap((response: HttpResponse<any>) => {\n                if (response.url) {\n                    console.log('Response received from: ' +  response.url);\n                }\n            }));\n    }\n}\n","module.exports = \"<h1>Angular Migration Demo</h1>\\n<div>\\n    <ul>\\n        <li><a href=\\\"/sessions\\\">Sessions</a></li>\\n        <li><a href=\\\"/speakers\\\">Speakers</a></li>\\n    </ul>\\n</div>\"","import {Component, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector:    'md-home-page',\n  templateUrl: './home-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HomePageComponent {\n\n    constructor() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {HomePageComponent} from './home-page/home-page.component';\n\n\n@NgModule({\n  imports: [\n      CommonModule,\n  ],\n  declarations: [\n      HomePageComponent\n  ],\n  exports: [\n  ],\n  entryComponents: [\n      HomePageComponent\n  ],\n  providers: [\n  ]\n})\nexport class HomeModule { }\n","module.exports = \"<input type=\\\"checkbox\\\" (click)=\\\"sessionClicked()\\\"><span>{{session.startsAt | date: 'medium'}} - <span class=\\\"title\\\" [innerHtml]=\\\"session.title | mdHighlightName: 'AngularJS to Angular 6 Migration'\\\"></span></span>\"","module.exports = \".title {\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9td2VpbWVyL0RvY3VtZW50cy9HaXRodWIvbmctbWlncmF0aW9uL25neC9zcmMvYXBwL3Nlc3Npb24vc2Vzc2lvbi1kaXNwbGF5L3Nlc3Npb24tZGlzcGxheS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFpQixFQUNwQiIsImZpbGUiOiJzcmMvYXBwL3Nlc3Npb24vc2Vzc2lvbi1kaXNwbGF5L3Nlc3Npb24tZGlzcGxheS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59Il19 */\"","import {Component, ChangeDetectionStrategy, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector:    'md-session-display',\n  templateUrl: './session-display.component.html',\n  styleUrls: ['./session-display.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SessionDisplayComponent {\n\n    @Input() session: any;\n\n    @Output() selectionUpdated = new EventEmitter<any>();\n\n    constructor() {}\n\n    sessionClicked() {\n        this.selectionUpdated.emit(this.session);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n\n@Injectable()\nexport class SessionService {\n\n    // private readonly apiUrl = '/assets/session.json';\n    private readonly apiUrl = 'https://sessionize.com/api/v2/mqm7pgek/view/sessions';\n\n    constructor(private http: HttpClient) {}\n\n    getSessions(): Observable<any[]> {\n        return this.http.get<any[]>(this.apiUrl).pipe(\n            map(response => response[0].sessions)\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {CoreModule} from '../core/core.module';\n\nimport {SessionsPageComponent} from './sessions-page/sessions-page.component';\nimport {ShowSessionDetailsDirective} from './show-session-details/show-session-details.directive';\nimport {SessionDisplayComponent} from './session-display/session-display.component';\nimport {SessionService} from './session-service/session.service';\n\n@NgModule({\n  imports: [\n      CommonModule,\n      HttpClientModule,\n      CoreModule\n  ],\n  declarations: [\n      SessionsPageComponent,\n      ShowSessionDetailsDirective,\n      SessionDisplayComponent\n  ],\n  exports: [\n      SessionsPageComponent\n  ],\n  entryComponents: [\n      SessionsPageComponent\n  ],\n  providers: [\n      SessionService\n  ]\n})\nexport class SessionModule { }\n","module.exports = \"<h1>Sessions</h1>\\n<ul>\\n    <li *ngFor=\\\"let session of sessions | async\\\" [mdShowSessionDetails]=\\\"session\\\">\\n      <md-session-display [session]=\\\"session\\\" (selectionUpdated)=\\\"selectionMade($event)\\\"></md-session-display>\\n    </li>\\n</ul>\"","import {Component, OnInit, Inject, ChangeDetectionStrategy} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {SessionService} from '../session-service/session.service';\n\n@Component({\n  selector:    'md-sessions-page',\n  templateUrl: './sessions-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SessionsPageComponent implements OnInit {\n\n    sessions: Observable<any[]>;\n\n    constructor(private sessionService: SessionService) {}\n\n    ngOnInit() {\n       this.sessions = this.sessionService.getSessions();\n    }\n\n    selectionMade(session) {\n        console.log('selection updated', session);\n    }\n}\n","import {Directive, ElementRef, OnInit, Input} from '@angular/core';\n\n@Directive({\n    selector: '[mdShowSessionDetails]',\n})\nexport class ShowSessionDetailsDirective implements OnInit {\n\n    @Input() mdShowSessionDetails: any;\n\n    constructor(private elementRef: ElementRef) {}\n\n    ngOnInit() {\n        const session = this.mdShowSessionDetails;\n\n        this.elementRef.nativeElement.addEventListener('dblclick', () => {\n            alert(session.description);\n        });\n    }\n}\n","module.exports = \"<!-- <span ng-bind-html=\\\"speaker.fullName \\\"></span> -->\\n\\n<span class=\\\"speaker-name\\\" [innerHtml]=\\\"speakerData.fullName | mdHighlightName: 'Matt Weimer'\\\"></span>\"","module.exports = \".speaker-name {\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9td2VpbWVyL0RvY3VtZW50cy9HaXRodWIvbmctbWlncmF0aW9uL25neC9zcmMvYXBwL3NwZWFrZXIvc3BlYWtlci1kaXNwbGF5L3NwZWFrZXItZGlzcGxheS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFpQixFQUNwQiIsImZpbGUiOiJzcmMvYXBwL3NwZWFrZXIvc3BlYWtlci1kaXNwbGF5L3NwZWFrZXItZGlzcGxheS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zcGVha2VyLW5hbWUge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufSJdfQ== */\"","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\n\n@Component({\n  selector:    'md-speaker-display',\n  templateUrl: './speaker-display.component.html',\n  styleUrls: ['./speaker-display.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpeakerDisplayComponent {\n\n    @Input() speakerData: any;\n\n    constructor() {}\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class SpeakerService {\n\n    //private readonly apiUrl = '/assets/speaker.json';\n    private readonly apiUrl = 'https://sessionize.com/api/v2/mqm7pgek/view/speakers';\n\n    constructor(private http: HttpClient) {}\n\n    getSpeakers(): Observable<any[]> {\n        return this.http.get<any[]>(this.apiUrl);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {CoreModule} from '../core/core.module';\n\nimport {SpeakerService} from './speaker-service/speaker.service';\nimport {SpeakersPageComponent} from './speakers-page/speakers-page.component';\nimport {SpeakerDisplayComponent} from './speaker-display/speaker-display.component';\n\n@NgModule({\n  imports: [\n      CommonModule,\n      HttpClientModule,\n      CoreModule\n  ],\n  declarations: [\n      SpeakerDisplayComponent,\n      SpeakersPageComponent\n  ],\n  exports: [],\n  entryComponents: [\n      SpeakersPageComponent\n  ],\n  providers: [\n      SpeakerService\n  ]\n})\nexport class SpeakerModule { }\n","module.exports = \"<h1>Speakers</h1>\\n<div *ngFor=\\\"let speaker of speakers | async\\\">\\n    <md-speaker-display [speakerData]=\\\"speaker\\\"></md-speaker-display>\\n</div>\"","import {Component, OnInit, Inject, ChangeDetectionStrategy} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {SpeakerService} from '../speaker-service/speaker.service';\n\n@Component({\n  selector:    'md-speakers-page',\n  templateUrl: './speakers-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpeakersPageComponent implements OnInit {\n\n    speakers: Observable<any[]>;\n\n    constructor(private speakerService: SpeakerService) {}\n\n    ngOnInit() {\n       this.speakers = this.speakerService.getSpeakers();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}